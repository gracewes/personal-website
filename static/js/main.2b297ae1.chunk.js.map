{"version":3,"sources":["components/Navbar.js","components/common/socialIcons.js","components/About.js","components/Resume.js","components/Projects.js","components/Contact.js","App.js","serviceWorker.js","index.js","data.js"],"names":["Navbar","props","react_default","a","createElement","className","Nav","as","navButtons","map","item","console","log","Item","Link","modules","activeClass","to","href","spy","smooth","offset","duration","title","socialIcons","social","target","rel","index_es","icon","type","About","id","src","alt","width","height","Jumbotron","fluid","Container","introText","name","about","common_socialIcons","Resume","items","Card","Header","place","Body","Subtitle","jobTitle","date","descriptions","text","Projects","projectName","position","github","undefined","link","Contact","concat","email","library","add","fab","App","components_Navbar","components_About","aboutData","components_Resume","resumeData","components_Projects","projectData","components_Contact","contactData","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2b297ae1.chunk.js","sourcesContent":["import React from 'react';\nimport {Nav} from 'react-bootstrap';\nimport {Link} from 'react-scroll';\n\nfunction Navbar(props) {\n  return (\n    <div className=\"App\">\n      <Nav className='navbar navbar-dark bg-dark justify-content-center fixed-top' as='ul'>\n        {props.navButtons.map(item => { \n            console.log(item)\n            return (\n            <Nav.Item>\n              <Nav.Link>\n                  <Link\n                    activeClass=\"active\"\n                    to={item.href}\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}>\n                    {item.title}\n                  </Link>\n              </Nav.Link>\n            </Nav.Item>\n            )\n        })}\n      </Nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nfunction socialIcons(props) {\n  return (\n    <div className='iconHolder'>\n      {props.social.map(item => {\n        return (\n          <div className='socialIcon' >\n            <a href={item.href} target='_blank' rel='noopener noreferrer'>\n              <FontAwesomeIcon icon={['fab', item.type]} />\n            </a>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default socialIcons;\n","import React from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport SocialIcons from './common/socialIcons';\n\nfunction About(props) {\n  return (\n    <div className='about' id='about'>\n      <div className='profilePic'>\n        <img src='./images/profilepic.png' alt='profile' width='100%' height='100%'/>\n      </div>\n      <div className='aboutContainer'>\n        <Jumbotron fluid>\n          <Container>\n            <p>{props.introText}</p>\n            <h1>{props.name}</h1>\n            <p>{props.about}</p>\n            <hr />\n            <SocialIcons social={props.social}></SocialIcons>\n          </Container>\n        </Jumbotron>\n      </div>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react';\nimport { Card, Jumbotron } from 'react-bootstrap';\n\nfunction Resume(props) {\n  return (\n    <div id='resume'>\n      <Jumbotron>\n        <h2>Work Experience</h2>\n        <hr/>\n        <section className='cardDeck'>\n          {props.items.map(item => {\n            return (\n              <div className='resumeCardDiv'>\n                <Card className='bg-success resumeCard'>\n                  <Card.Header>{item.place}</Card.Header>\n                  <Card.Body>\n                    <Card.Subtitle>{item.jobTitle}</Card.Subtitle>\n                    <h6>{item.date}</h6>\n                    <ul>\n                      {item.descriptions.map(text => {\n                        return (\n                          <li>{text}</li>\n                        )\n                      })}\n                    </ul>\n                  </Card.Body>\n                </Card>\n              </div>\n            )\n          })}\n        </section>\n      </Jumbotron>\n    </div>\n  )\n}\n\nexport default Resume;\n","import React from 'react';\nimport { Card, Jumbotron } from 'react-bootstrap';\n\nfunction Projects(props) {\n  return (\n    <div id='projects'>\n      <Jumbotron>\n        <h2>Projects</h2>\n        <hr/>\n        <section className='cardDeck'>\n          {props.items.map(item => {\n            return (\n              <div className='resumeCardDiv'>\n                <Card className='bg-info resumeCard'>\n                  <Card.Header>{item.projectName}</Card.Header>\n                  <Card.Body>\n                  {item.position !== null && <Card.Subtitle>{item.position}</Card.Subtitle>}\n                    <h6>{item.date}</h6>\n                    <ul>\n                      {item.descriptions.map(text => {\n                        return (\n                          <li>{text}</li>\n                        )\n                      })}\n                      {item.github !== null && item.github !== undefined && <li><a className='projectLink' href={item.github}>Github Repo</a></li>}\n                      {item.link !== null && item.link !== undefined && <li><a className='projectLink' href={item.link}>Live Project</a></li>}\n                    </ul>\n                  </Card.Body>\n                </Card>\n              </div>\n            )\n          })}\n        </section>\n      </Jumbotron>\n    </div>\n  )\n}\n\nexport default Projects;\n","import React from 'react';\nimport SocialIcons from './common/socialIcons.js';\n\nfunction Contact(props) {\n  return (\n    <footer id='contact'>\n      <p>{props.text} <a href={`mailto:${props.email}`}>here</a></p>\n      <hr />\n      <SocialIcons social={props.social}></SocialIcons>\n    </footer>\n  )\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport About from './components/About.js';\nimport Resume from './components/Resume.js';\nimport Projects from './components/Projects.js';\nimport Contact from './components/Contact.js';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {navButtons, aboutData, resumeData, projectData, contactData} from './data.js';\n\nlibrary.add(fab)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar navButtons={navButtons} />\n      <About {...aboutData} />\n      <Resume items={resumeData} />\n      <Projects items={projectData} />\n      <Contact {...contactData} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const navButtons = [\n  { title: 'About', href: 'about' },\n  { title: 'Experience', href: 'resume' },\n  { title: 'Projects', href: 'projects' },\n  { title: 'Contact', href: 'contact' }\n]\n\nconst aboutData = {\n  introText: 'Howdy! My name is',\n  name: 'Grace Westerman',\n  about: 'I\\'m a senior computer science student at Texas A&M University in College Station, Texas, Whoop! I love learning new things while solving problems.',\n  social: [\n    {\n      href: 'https://www.linkedin.com/in/grace-westerman',\n      type: 'linkedin'\n    },\n    {\n      href: 'https://github.com/gracewes',\n      type: 'github'\n    }\n  ]\n}\n\nconst contactData = {\n  text: 'Email me',\n  email: 'gracewes@tamu.edu',\n  social: [\n    {\n      href: 'https://www.linkedin.com/in/grace-westerman',\n      type: 'linkedin'\n    },\n    {\n      href: 'https://github.com/gracewes',\n      type: 'github'\n    }\n  ]\n}\n\nconst resumeData = [\n  {\n    place: 'USAA',\n    jobTitle: 'Software Developer and Integrator',\n    date: 'May - July 2019',\n    descriptions: [\n      'Created new functionalities in existing GraphQL services used to serve a CI/CD monitoring dashboard',\n      'Developed front end page in React to consume new GraphQL functionalities',\n      'Built Gitlab webhooks to store data in CouchDB for consumption by GraphQL service',\n      'Improved existing automated testing suite for React application using Mocha and Enzyme'\n    ]\n  },\n  {\n    place: 'USAA',\n    jobTitle: 'Software Developer and Integrator',\n    date: 'May - August 2018',\n    descriptions: [\n      'Quickly mastered new skills while working in an agile team environment within a large enterprise',\n      'Created UI components for internal business applications using React and Redux',\n      'Wrote automated tests for React components',\n      'Developed endpoints for existing RESTful APIs in Java'\n    ]\n  },\n  {\n    place: 'Texas A&M Physics Department',\n    jobTitle: 'Peer Teacher',\n    date: 'January - May 2017',\n    descriptions: [\n      'Conducted weekly recitations for three groups of eight students',\n      'Facilitated group problem solving while ensuring no student was left behind in the material',\n      'Developed small group leadership and communication skills'\n    ]\n  }\n]\n\nconst projectData = [\n  {\n    projectName: 'Aggie Coding Connect',\n    date: 'January - May 2019',\n    descriptions: [\n      'Application developed using React and Express for CSCE 431 Software Engineering Project',\n      'Web application to connect students in Aggie Coding Club with software development opportunities'\n    ],\n    github: 'https://github.com/gracewes/431-Creative',\n    link: 'https://tranquil-dusk-38037.herokuapp.com/'\n  },\n  {\n    projectName: 'Pyram - TAMUHack Project',\n    date: 'January 2019',\n    descriptions: [\n      'Built with Python, Flask, and Google Maps API',\n      'Web application to help people connect with others who want to do activities in an area',\n      'Developed in 24 hours as part of Texas A&M\\'s hackathon'\n    ],\n    github: 'https://github.com/gracewes/pyram',\n    link: 'http://pyram.io'\n  },\n  {\n    projectName: 'Autonomous Underwater Vehicle',\n    position: 'Programming Team Lead',\n    date: 'September 2017 - May 2018',\n    descriptions: [\n      'Conducted weekly meetings to teach team members programming concepts using Python and Arduinos',\n      'Helped to develop software to run the Texas A&M Women in Engineering\\'s Autonomous Underwater Vehicle to compete in the AUVSI Robosub competition'\n    ]\n  }\n]\n\nmodule.exports = {\n  navButtons,\n  aboutData,\n  contactData, \n  projectData,\n  resumeData\n}"],"sourceRoot":""}